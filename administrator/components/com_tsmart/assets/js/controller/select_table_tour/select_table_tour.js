(function ($) {    // here we go!    $.select_table_tour = function (element, options) {        // plugin's default options        var defaults = {            default:0,            list_products:[]        }        // current instance of the object        var plugin = this;        // this will hold the merged default, and user-provided options        plugin.settings = {};        var $element = $(element), // reference to the jQuery version of DOM element            element = element;    // reference to the actual DOM element        // the "constructor" method that gets called when the object is created        plugin.init = function () {            plugin.settings = $.extend({}, defaults, options);            $element.find('.tr-row:odd').css({                'background-color':'#f9f9f9'            });        };        plugin.trigger=function(event,_function){            switch(event) {                case 'change':                    $element.find('.body .tr-row .input-application').click(function(){                        var tsmart_product_id=$(this).val();                        if(typeof _function=='function')                        {                            _function.call(this,tsmart_product_id);                        }                    });                    break;                case 'click':                    break;                default:                    //            }        };        plugin.filter=function(filter){            $element.find('>.body>.tr-row').removeClass('show').hide();            var list_products=plugin.settings.list_products;            for(var i=0;i<list_products.length;i++){                var tour=list_products[i];                var show=true;                for (var key in filter) {                    // skip loop if the property is from prototype                    if (!filter.hasOwnProperty(key)) continue;                    var value = filter[key];                    if(tour.hasOwnProperty(key) && tour[key]!=value )                    {                        show=false;                    }                }                if(show)                {                    var tsmart_product_id=tour.tsmart_product_id;                    var tr_row=$element.find('>.body>.tr-row[data-tsmart_product_id="'+tsmart_product_id+'"]');                    tr_row.addClass('show').show();                }            }            console.log(list_products);        }        plugin.init();    }    // add the plugin to the jQuery.fn object    $.fn.select_table_tour = function (options) {        // iterate through the DOM elements we are attaching the plugin to        return this.each(function () {            // if plugin has not already been attached to the element            if (undefined == $(this).data('select_table_tour')) {                var plugin = new $.select_table_tour(this, options);                $(this).data('select_table_tour', plugin);            }        });    }})(jQuery);